-- {{{ Wibox
-- Create a textclock widget
	mytextclock = awful.widget.textclock()

-- Create a wibox for each screen and add it
mywibox = {}
myinfobox = {}
mypromptbox = {}
mylayoutbox = {}
mytaglist = {}
mytaglist.buttons = awful.util.table.join(
                    awful.button({ }, 1, awful.tag.viewonly),
                    awful.button({ modkey }, 1, awful.client.movetotag),
                    awful.button({ }, 3, awful.tag.viewtoggle),
                    awful.button({ modkey }, 3, awful.client.toggletag),
                    awful.button({ }, 4, function(t) awful.tag.viewnext(awful.tag.getscreen(t)) end),
                    awful.button({ }, 5, function(t) awful.tag.viewprev(awful.tag.getscreen(t)) end)
                    )
mytasklist = {}
mytasklist.buttons = awful.util.table.join(
                     awful.button({ }, 1, function (c)
                                              if c == client.focus then
                                                  c.minimized = true
                                              else
                                                  -- Without this, the following
                                                  -- :isvisible() makes no sense
                                                  c.minimized = false
                                                  if not c:isvisible() then
                                                      awful.tag.viewonly(c:tags()[1])
                                                  end
                                                  -- This will also un-minimize
                                                  -- the client, if needed
                                                  client.focus = c
                                                  c:raise()
                                              end
                                          end),
                     awful.button({ }, 3, function ()
                                              if instance then
                                                  instance:hide()
                                                  instance = nil
                                              else
                                                  instance = awful.menu.clients({ width=250 })
                                              end
                                          end),
                     awful.button({ }, 4, function ()
                                              awful.client.focus.byidx(1)
                                              if client.focus then client.focus:raise() end
                                          end),
                     awful.button({ }, 5, function ()
                                              awful.client.focus.byidx(-1)
                                              if client.focus then client.focus:raise() end
                                          end))

for s = 1, screen.count() do
    -- Create a promptbox for each screen
    mypromptbox[s] = awful.widget.prompt()
    -- Create an imagebox widget which will contains an icon indicating which layout we're using.
    -- We need one layoutbox per screen.
    mylayoutbox[s] = awful.widget.layoutbox(s)
    mylayoutbox[s]:buttons(awful.util.table.join(
                           awful.button({ }, 1, function () awful.layout.inc(layouts, 1) end),
                           awful.button({ }, 3, function () awful.layout.inc(layouts, -1) end),
                           awful.button({ }, 4, function () awful.layout.inc(layouts, 1) end),
                           awful.button({ }, 5, function () awful.layout.inc(layouts, -1) end)))
    -- Create a taglist widget
	   mytaglist[s] = awful.widget.taglist(s, awful.widget.taglist.filter.all, mytaglist.buttons)

    -- Create a tasklist widget
	   mytasklist[s] = awful.widget.tasklist(s, awful.widget.tasklist.filter.currenttags, mytasklist.buttons)

    -- Create the wibox
	   mywibox[s] = awful.wibox({ position = "top", screen = s })
	   myinfobox[s] = awful.wibox({ position = "bottom", screen = s })
-- 
-- DEFINE MY WIDGETS
--
	DIR_COMPLEX = DIR_RC .. "/complex/"
	
	spacer = wibox.widget.textbox()
	spacer:set_text(' | ')
	empty = wibox.widget.textbox()
	empty:set_text(' ')
	txt_mem = wibox.widget.textbox()
	txt_mem:set_text('ram ')
	txt_mail = wibox.widget.textbox()
	txt_mail:set_text('mail ')
-- uptime
	uptime = wibox.widget.textbox()
	vicious.register( uptime, vicious.widgets.uptime, "up $1d $2h $3min")
-- kernel	
	oswidget = wibox.widget.textbox()
	vicious.register(oswidget, vicious.widgets.os, "$2")
-- hdd C°
	hddtempwidget = wibox.widget.textbox()
	vicious.register(hddtempwidget, vicious.widgets.hddtemp, "${/dev/sda}°C ", 19)
-- Calendar widget to attach to the textclock
	require('widgets/calendar2')
	calendar2.addCalendarToWidget(mytextclock)
-- Create a network usage widget
	-- Down
	net_down_icon  = wibox.widget.imagebox()
	net_down_icon:set_image(beautiful.widget_down)
	net_down_widget = wibox.widget.textbox()
	vicious.register(net_down_widget,vicious.widgets.net,"down: ${wlp3s0 down_kb}kb / up: ${wlp3s0 up_kb}kb",2.5)
	-- Up
	net_up_icon  = wibox.widget.imagebox()
	net_up_icon:set_image(beautiful.widget_up)
	--net_up_widget = wibox.widget.textbox()
	--vicious.register(net_up_widget,vicious.widgets.net,"${wlp3s0 up_kb}kb",2.5)
-- bat
	batt = wibox.widget.textbox()
	vicious.register(batt, vicious.widgets.bat, "⚡ $2% $1$3", 61, "BAT0")

-- wifi name & rate
	wifiwidget = wibox.widget.textbox()
	vicious.register(wifiwidget, vicious.widgets.wifi, '${ssid}' , 180, wifi)
	wifistr = wibox.widget.textbox()
	vicious.register(wifistr, vicious.widgets.wifi, ' (${link}%) ' , 120, wifi)		-- mode // sign // link
-- dofile ( DIR_COMPLEX .. "")
 	dofile ( DIR_COMPLEX .. "cpu")
	dofile ( DIR_COMPLEX .. "cpu_temp")
	dofile ( DIR_COMPLEX .. "mem")
	dofile ( DIR_COMPLEX .. "disk_usage")
	dofile ( DIR_COMPLEX .. "vol")
	dofile ( DIR_COMPLEX .. "bat")
	dofile ( DIR_COMPLEX .. "mpd")


	
-- Top and bottom taskbar.	
	-- Widgets that are aligned to the left
	    left_layout = wibox.layout.fixed.horizontal()
	    left_layout:add(mylayoutbox[s])
	    left_layout:add(empty)
	    left_layout:add(mytaglist[s])
	    left_layout:add(empty)
	    left_layout:add(mypromptbox[s])
	-- Widgets that are aligned to the right
	    right_layout = wibox.layout.fixed.horizontal()
	    if s == 1 then right_layout:add(wibox.widget.systray()) end
	    right_layout:add(empty)
	    --right_layout:add(empty)
	    --right_layout:add(txt_mail)
	    --right_layout:add(empty)
	    --right_layout:add(bat_img)
	    --right_layout:add(spacer)
	    right_layout:add(volume_img)
	    right_layout:add(volume_icon)
	     right_layout:add(spacer)
	    --right_layout:add(empty)
	    right_layout:add(mytextclock)
	    right_layout:add(empty)
	--    right_layout:add(mylauncher.mm)
	--    right_layout:add(mylauncher.service)
	--    right_layout:add(mylauncher.power)
	--    right_layout:add(mylauncher.system)
	    right_layout:add(mylauncher)
	-- Now bring it all together (with the tasklist in the middle)
	    layout = wibox.layout.align.horizontal()
	    layout:set_left(left_layout)
	    layout:set_middle(mytasklist[s])
	    layout:set_right(right_layout)
	-- Apply layout
	    mywibox[s]:set_widget(layout)
-- BOTTOM BAR
	-- Widgets that are aligned to the bottom - left
	    bottom_left_layout = wibox.layout.fixed.horizontal()
	    bottom_left_layout:add(diskwidget)
	    bottom_left_layout:add(spacer)
	    bottom_left_layout:add(uptime)
	    bottom_left_layout:add(spacer)
	    bottom_left_layout:add(oswidget)
	    bottom_left_layout:add(spacer)
	    bottom_left_layout:add(wifiwidget)
	    bottom_left_layout:add(wifistr)
	    bottom_left_layout:add(spacer)
	    bottom_left_layout:add(net_down_widget)
	-- Widgets that are aligned at the bottm - center
	    bottom_center_layout = wibox.layout.fixed.horizontal()
	    bottom_center_layout:add(mpdwidget_pl)
	    bottom_center_layout:add(empty)
	    bottom_center_layout:add(mpdwidget)
	-- Widgets that are aligned to the bottom - right
	    bottom_right_layout = wibox.layout.fixed.horizontal()
	    bottom_right_layout:add(thermwidget)
	    bottom_right_layout:add(empty)
	    bottom_right_layout:add(cpuwidget)
	    bottom_right_layout:add(empty)
	    bottom_right_layout:add(cputext)
	    bottom_right_layout:add(spacer)
	    bottom_right_layout:add(txt_mem)
	    bottom_right_layout:add(memwidget)
	    bottom_right_layout:add(empty)
	    bottom_right_layout:add(memvalue)
	    -- SEEMS BUGGY.. TODO WHY?
	    --bottom_right_layout:add(spacer)
	    --bottom_right_layout:add(hddtempwidget)
	    bottom_right_layout:add(spacer)
	    bottom_right_layout:add(bat_img)
	    bottom_right_layout:add(empty)
	-- Now bring it all together
	    layout_bottom = wibox.layout.align.horizontal()
	    layout_bottom:set_left(bottom_left_layout)
	    layout_bottom:set_middle(bottom_center_layout)
	    layout_bottom:set_right(bottom_right_layout)
	-- Apply layout
	    myinfobox[s]:set_widget(layout_bottom)
	end
-- }}}


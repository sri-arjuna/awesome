#!/usr/bin/env lua
--
--	General Keybinding Configuration
--
globalkeys = awful.util.table.join(
	-- Basic movement
	awful.key({modkey}, "Left",   	awful.tag.viewprev       ),
	awful.key({modkey}, "Right",  	awful.tag.viewnext       ),
	
	-- Menus and Prompts
	awful.key({modkey}, "r", 	function() mypromptbox[mouse.screen]:run() end), -- Shell prompt
	awful.key({modkey}, "m", 	function() mymainmenu:show() end), -- Menu
	awful.key({modkey}, "p", 	function() menubar.show() end), -- Programs
	awful.key({modkey}, "x",	function ()
						awful.prompt.run({ prompt = "Run Lua code: " },
						mypromptbox[mouse.screen].widget,
						awful.util.eval, nil,
						awful.util.getdir("cache") .. "/history_eval")
					end),
	
	-- Standard program behaviour
	awful.key({modkey}, "Escape", 	awful.tag.history.restore), -- Reset/return from such
	awful.key({modkey, "Control" }, "r",		awesome.restart),
	awful.key({modkey, "Control" }, "n",		awful.client.restore),
	awful.key({modkey, "Shift"   }, "q",		awesome.quit),
	
	-- Start specific applications
	awful.key({modkey,           }, "Return",	function () awful.util.spawn(terminal) end),
	awful.key({modkey, "Control" }, "e", 		function () awful.util.spawn(files) end),
	awful.key({modkey, "Control" }, "m", 		function () awful.util.spawn(email) end),
	--awful.key({modkey, "Control" }, "t", 		function () awful.util.spawn(ftp) end),
	awful.key({modkey, "Control" }, "w", 		function () awful.util.spawn(browser) end),
	awful.key({modkey, "Control" }, "i", 		function () awful.util.spawn(irc) end),
	awful.key({modkey, "Control" }, "g", 		function () awful.util.spawn(graphic) end),
	
	-- Volume (FN + F9/F10/F11)
	--awful.key({}, "#122", 	function() volume_change("down") end),
	--awful.key({}, "#123", 	function() volume_change("up") end),
	--awful.key({}, "#121", 	function() volume_change("mute") end),
	-- Volume controls | Multimedia keys: Volume Up/Down Mute
	--awful.key({modkey }, "XF86AudioRaiseVolume", 	function() volume_change("up") end),
	--awful.key({modkey }, "XF86AudioLowerVolume", 	function() volume_change("down") end),
	--awful.key({ }, "XF86AudioMute", 		function() volume_change("mute") end),
	
	awful.key({ modkey,           }, "j",
	function ()
	    awful.client.focus.byidx( 1)
	    if client.focus then client.focus:raise() end
	end),
	awful.key({ modkey,           }, "k",
	function ()
	    awful.client.focus.byidx(-1)
	    if client.focus then client.focus:raise() end
	end),
	-- changed from default 'w' to 'm'
	
	-- Layout manipulation
	awful.key({ modkey, "Shift"   }, "j", function () awful.client.swap.byidx(  1)    end),
	awful.key({ modkey, "Shift"   }, "k", function () awful.client.swap.byidx( -1)    end),
	awful.key({ modkey, "Control" }, "j", function () awful.screen.focus_relative( 1) end),
	awful.key({ modkey, "Control" }, "k", function () awful.screen.focus_relative(-1) end),
	awful.key({ modkey,           }, "u", awful.client.urgent.jumpto),
	awful.key({ modkey,           }, "Tab",
	function ()
	    awful.client.focus.history.previous()
	    if client.focus then
		client.focus:raise()
	    end
	end),
	
	awful.key({ modkey,           }, "l",     	function () awful.tag.incmwfact( 0.05)    end),
	awful.key({ modkey,           }, "h",    	function () awful.tag.incmwfact(-0.05)    end),
	awful.key({ modkey, "Shift"   }, "h",     	function () awful.tag.incnmaster( 1)      end),
	awful.key({ modkey, "Shift"   }, "l",    	function () awful.tag.incnmaster(-1)      end),
	awful.key({ modkey, "Control" }, "h",     	function () awful.tag.incncol( 1)         end),
	awful.key({ modkey, "Control" }, "l",     	function () awful.tag.incncol(-1)         end),
	awful.key({ modkey,           }, "space", 	function () awful.layout.inc(layouts,  1) end),
	awful.key({ modkey, "Shift"   }, "space", 	function () awful.layout.inc(layouts, -1) end)
)
--
--	Focused Window 
--
clientkeys = awful.util.table.join(
	awful.key({ modkey,           }, "f",		function (c) c.fullscreen = not c.fullscreen  end),
	awful.key({ modkey, "Shift"   }, "c",		function (c) c:kill()                         end),
	awful.key({ modkey, "Control" }, "space",	awful.client.floating.toggle                     ),
	awful.key({ modkey, "Control" }, "Return",	function (c) c:swap(awful.client.getmaster()) end),
	awful.key({ modkey,           }, "o",		awful.client.movetoscreen                        ),
	awful.key({ modkey,           }, "t",		function (c) c.ontop = not c.ontop            end),
	awful.key({ modkey,           }, "n",		function (c)
								-- The client currently has the input focus, so it cannot be
								-- minimized, since minimized clients can't have the focus.
								c.minimized = true
							end),
	awful.key({ modkey,           }, "m",		function (c)
								c.maximized_horizontal = not c.maximized_horizontal
								c.maximized_vertical   = not c.maximized_vertical
							end)
)

--	--
---	---
-----	-----	->		Do not change anything below here,
-----	-----	->	as that is absolute default behaviour and must stay as is!
---	---
--	--

-- Bind all key numbers to tags.
-- Be careful: we use keycodes to make it works on any keyboard layout.
-- This should map on the top row of your keyboard, usually 1 to 9.
for i = 1, 9 do
    globalkeys = awful.util.table.join(globalkeys,
        awful.key({ modkey }, "#" .. i + 9,
                  function ()
                        local screen = mouse.screen
                        local tag = awful.tag.gettags(screen)[i]
                        if tag then
                           awful.tag.viewonly(tag)
                        end
                  end),
        awful.key({ modkey, "Control" }, "#" .. i + 9,
                  function ()
                      local screen = mouse.screen
                      local tag = awful.tag.gettags(screen)[i]
                      if tag then
                         awful.tag.viewtoggle(tag)
                      end
                  end),
        awful.key({ modkey, "Shift" }, "#" .. i + 9,
                  function ()
                      local tag = awful.tag.gettags(client.focus.screen)[i]
                      if client.focus and tag then
                          awful.client.movetotag(tag)
                     end
                  end),
        awful.key({ modkey, "Control", "Shift" }, "#" .. i + 9,
                  function ()
                      local tag = awful.tag.gettags(client.focus.screen)[i]
                      if client.focus and tag then
                          awful.client.toggletag(tag)
                      end
                  end))
end
	clientbuttons = awful.util.table.join(
	    awful.button({ }, 1, function (c) client.focus = c; c:raise() end),
	    awful.button({ modkey }, 1, awful.mouse.client.move),
	    awful.button({ modkey }, 3, awful.mouse.client.resize))
-- Set keys
	root.keys(globalkeys)
-- }}}
